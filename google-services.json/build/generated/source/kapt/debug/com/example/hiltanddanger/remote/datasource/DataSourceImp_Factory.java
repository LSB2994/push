// Generated by Dagger (https://dagger.dev).
package com.example.hiltanddanger.remote.datasource;

import com.example.hiltanddanger.remote.ArticleService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class DataSourceImp_Factory implements Factory<DataSourceImp> {
  private final Provider<ArticleService> articleServiceProvider;

  public DataSourceImp_Factory(Provider<ArticleService> articleServiceProvider) {
    this.articleServiceProvider = articleServiceProvider;
  }

  @Override
  public DataSourceImp get() {
    return newInstance(articleServiceProvider.get());
  }

  public static DataSourceImp_Factory create(Provider<ArticleService> articleServiceProvider) {
    return new DataSourceImp_Factory(articleServiceProvider);
  }

  public static DataSourceImp newInstance(ArticleService articleService) {
    return new DataSourceImp(articleService);
  }
}
