// Generated by Dagger (https://dagger.dev).
package com.example.hiltanddanger.view;

import com.example.hiltanddanger.remote.repository.Repository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class UserVm_Factory implements Factory<UserVm> {
  private final Provider<Repository> repositoryProvider;

  public UserVm_Factory(Provider<Repository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public UserVm get() {
    return newInstance(repositoryProvider.get());
  }

  public static UserVm_Factory create(Provider<Repository> repositoryProvider) {
    return new UserVm_Factory(repositoryProvider);
  }

  public static UserVm newInstance(Repository repository) {
    return new UserVm(repository);
  }
}
